# Create a new directory and enter it
function mkd() {
	mkdir -p "$@" && cd "$_";
}

# Start an HTTP server from a directory, optionally specifying the port
function server() {
	local port="${1:-8000}";
	sleep 1 && open "http://localhost:${port}/" &
	# Set the default Content-Type to `text/plain` instead of `application/octet-stream`
	# And serve everything as UTF-8 (although not technically correct, this doesn’t break anything for binary files)
	python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port";
}

# Stop all containers
function dstop() { 
  docker stop $(docker ps -q); 
}

# Stop all containers
function dkill() {
  docker kill $(docker ps -q);
}

function dssh() {
  docker exec -it $(docker ps -q -f name=$1) bash
}

function dlogs() {
  docker logs $(docker ps -q -f name=$1) --follow
}
#Merge API
function mergeapi() {

    if [ $# -eq 0 ]
      then
        echo "Supply at least 1 argument please :)"
    elif [ ! -z "$1" ] && [ ! -z "$2"] && [ ! -z "$3"]
      then
        open "http://gitlab.leighton.com/sage/api/merge_requests/new?utf8=✓&source_branch=$1&target_branch=$2&assignee=$3"
    elif [ ! -z "$1" ] && [ ! -z "$2"]
      then
        open "http://gitlab.leighton.com/sage/api/merge_requests/new?utf8=✓&source_branch=$1&target_branch=$2"
    elif [ ! -z "$1" ] && [ -z "$2"]
      then
        open "http://gitlab.leighton.com/sage/api/merge_requests/new?utf8=✓&merge_request%5Bsource_branch%5D=%2F$1"
    fi
}
